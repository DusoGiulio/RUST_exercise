var searchIndex = new Map(JSON.parse('[\
["esercizio7",{"doc":"","t":"CCFFNNNNNNNNNNNNNNNNNNNNNNNNN","n":["double_link","double_link","DoublyPointedList","Node","borrow","borrow","borrow_mut","borrow_mut","default","default","from","from","get","into","into","is_empty","len","new","new","pop_back","pop_front","push_back","push_front","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"esercizio7"],[1,"esercizio7::double_link"],[2,"esercizio7::double_link::double_link"],[29,"core::default"],[30,"core::option"],[31,"core::result"],[32,"core::any"]],"d":["","","Rappresenta una lista doppiamente linkata","Rappresenta un nodo della lista doppiamente linkata.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Restituisce l’elemento in posizione <code>n</code> dalla testa della …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Verifica se la lista è vuota.","Restituisce la lunghezza della lista.","","Crea una nuova lista doppiamente linkata vuota.","Rimuove e restituisce l’elemento alla fine della lista.","Rimuove e restituisce l’elemento all’inizio della …","Aggiunge un elemento alla fine della lista.","Aggiunge un elemento all’inizio della lista.","","","","","",""],"i":[0,0,0,0,1,3,1,3,1,3,1,3,3,1,3,3,3,1,3,3,3,3,3,1,3,1,3,1,3],"f":"````{ce{}{}}000{{}{{b{c}}}d}{{}{{f{c}}}d}{cc{}}0{{{f{c}}h}{{j{c}}}d}44{{{f{c}}}ld}{{{f{c}}}nd}{c{{b{c}}}{}}5{{{f{c}}}{{j{c}}}d}0{{{f{c}}c}A`d}0{c{{Ab{e}}}{}{}}000{cAd{}}0","c":[],"p":[[5,"Node",2],[10,"Default",29],[5,"DoublyPointedList",2],[1,"i32"],[6,"Option",30],[1,"bool"],[1,"usize"],[1,"unit"],[6,"Result",31],[5,"TypeId",32]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
