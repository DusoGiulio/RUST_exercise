var searchIndex = new Map(JSON.parse('[\
["esercizio8",{"doc":"","t":"CCFFNNNNNNNNNNNNNNNNNNNNNN","n":["numero_vocali","numero_vocali","NumVocali","TuplaVocali","borrow","borrow","borrow_mut","borrow_mut","eq","eq","fmt","fmt","from","from","into","into","new","new","num_vocali_struct","num_vocali_tuple","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"esercizio8"],[1,"esercizio8::numero_vocali"],[2,"esercizio8::numero_vocali::numero_vocali"],[26,"core::fmt"],[27,"core::fmt"],[28,"core::result"],[29,"core::any"]],"d":["","Questo modulo fornisce strutture per contare il numero di …","Rappresenta il numero di vocali conteggiate singolarmente.","Rappresenta una tupla contenente il numero di vocali …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Crea una nuova istanza di <code>NumVocali</code>.","Crea una nuova istanza di <code>TuplaVocali</code>.","Conta il numero di vocali nella stringa specificata e …","Conta il numero di vocali nella stringa specificata e …","","","","","",""],"i":[0,0,0,0,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3],"f":"````{ce{}{}}000{{bb}d}{{ff}d}{{bh}j}{{fh}j}{cc{}}055{{lllll}b}{{lllll}f}{nb}{nf}{c{{A`{e}}}{}{}}000{cAb{}}0","c":[],"p":[[5,"NumVocali",2],[1,"bool"],[5,"TuplaVocali",2],[5,"Formatter",26],[8,"Result",26],[1,"i32"],[5,"String",27],[6,"Result",28],[5,"TypeId",29]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
